@page "/ciudadlist"
@inject HttpClient Http
@using LaboratorioClient.Models
<div>
      <NavMenu />
</div>
<div id="contenedor">
    <section id="foto">
        <div class="section-title">
            <h2>Ciudades</h2>
        </div>
        <div class="col-11" style="cursor:pointer" data-bs-toggle="offcanvas" data-bs-target="#offcanvasPaises" aria-controls="offcanvasScrolling">
            <img src="cuida.jpeg" class="img-fluid" alt="...">
        </div>

    </section>
    <section id="contenido">

        <div class="card" style="width:700px; max-height:450px ;height:auto"
                <div class="card-body. overflow-scroll">
                    <table   class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Nombre de la Cuidad</th>
                                <th>Nombre del Pais</th>

                                <th> </th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var i in ListadoCiudades)
                        {
                                        <tr>
                                            <td>@i.Nombre_Ciudad_A6</td>
                                            <td>@i.A5_Pais.Nombre_Pais_A5</td>
                                                <td> <button type="button" class="btn btn-outline-secondary" @onclick="()=>Eliminar(i)">Eliminar</button> </td>
                                        </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>

    </section>





</div>

<div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasPaises" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Listado Ciudad</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <p>Laboratorio activo con presencia en mas de 18 paises</p>
        <br />
        <div>
            <label>Nombre</label>
            <input @bind-value=nuevaciudad.Nombre_Ciudad_A6 class="form-control" placeholder="Nombre" />
            <label>Código</label>
            <select @bind=nuevaciudad.A5_PaisId class="form-select" aria-label="Default select example">
                <option selected>Abrir lista de ciudades</option>
                @foreach (var i in ListadoPaises)
                {
                    <option value=@i.Id>@i.Nombre_Pais_A5</option>
                }

            </select>
            <br />
            <button @onclick=Guardar type="button" class="btn btn-secondary">
                Guardar Ciudad
            </button>
            <br />
            <label>@RespuestaAlCrear</label>

        </div>
    </div>
</div>



<style>
    #contenedor {
        width: auto;
        max-width: 1000px;
        height: auto;
        margin: auto;
        margin-top: 20px;
        margin-bottom: 20px;
        padding-bottom: 20px;
    }

    #contenido {
        width: 700px;
        height: 450px;
        float: right;
    }

    #foto {
        width: 280px;
        height: 500px;
        float: left
    }
</style>

@code {
    A6_Ciudad nuevaciudad = new A6_Ciudad();
    string RespuestaAlCrear = "";
    public static List<A5_Pais> ListadoPaises = new List<A5_Pais>();
    public static List<A6_Ciudad> ListadoCiudades = new List<A6_Ciudad>();
    Conexion miconexion = new Conexion();
    async Task Guardar()
    {
        RespuestaAlCrear = "Procesando...";
        var respuesta = await Http.PostAsJsonAsync($"{miconexion.Servidor}/api/A6_Ciudad/Crear", nuevaciudad);
        await Actualizar();
        RespuestaAlCrear = await respuesta.Content.ReadAsStringAsync();
        nuevaciudad.Nombre_Ciudad_A6 = null;

    }

    async Task Actualizar()
    {
        var listado = await Http.GetFromJsonAsync<List<A5_Pais>>($"{miconexion.Servidor}/api/A5_Pais/Listado");
        ListadoPaises = listado;
        var listadoCiudad = await Http.GetFromJsonAsync<List<A6_Ciudad>>($"{miconexion.Servidor}/api/A6_Ciudad/Listado");
        ListadoCiudades = listadoCiudad;
    }
    protected override async Task OnInitializedAsync()
    {
        await Actualizar();
    }

    async Task Eliminar(A6_Ciudad objeto)
    {


        var respuesta = await Http.DeleteAsync($"{miconexion.Servidor}/api/A6_Ciudad/Eliminar/{objeto.Id}");
        Console.WriteLine(respuesta);
        await Actualizar();
    }
}