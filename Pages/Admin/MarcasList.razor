@page "/marcas"
@inject HttpClient Http
@using LaboratorioClient.Models
<div>
    <NavMenu />
</div>


<br />
<br />
<div class="section-title">
    <h2>Marcas</h2>
</div>

<div class="row" style="display:flex;justify-content:center">
    <div class="col-3" style="cursor:pointer" data-bs-toggle="offcanvas" data-bs-target="#offcanvasTipoUnidad" aria-controls="offcanvasScrolling">
        <img src="Marcas.jfif" class="img-fluid" alt="...">
    </div>
    <div class="col-4" style="display:flex;align-items:center">

        <div class="card" style="width:500px; max-height:400px ;height:auto"
                <div class="card-body. overflow-scroll">
                    <table   class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Descripción Marca</th>
                                <th>Uso Marca</th>

                                <th> </th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var i in Listado)
                        {
                                        <tr>
                                            <td>@i.Descripcion_Marca_E11</td>
                                            <td>@i.Uso_Marca_E11</td>
                                                <td> <button type="button" class="btn btn-outline-secondary" @onclick="()=>Eliminar(i)">Eliminar</button> </td>
                                        </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>  
    </div>
</div>

<div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasTipoUnidad" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Listado Marca</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <p>Laboratorio activo con presencia en mas de 18 paises</p>
        <br />
        <div>
            <label>Descripcion</label>
            <input @bind-value=nuevamarca.Descripcion_Marca_E11 class="form-control" placeholder="Descripcion" />
            <label>Uso </label>
            <input @bind-value=nuevamarca.Uso_Marca_E11 class="form-control" placeholder="Uso" />

            
            
            <button @onclick=Guardar type="button" class="btn btn-secondary">
                Guardar
            </button>
            <br />
            <label>@RespuestaAlCrear</label>

        </div>
    </div>
</div>

@code {
    E11_Marca nuevamarca = new E11_Marca();
    string RespuestaAlCrear = "";
    Conexion miconexion = new Conexion();
    
    public static List<E11_Marca> Listado = new List<E11_Marca>();
    async Task Guardar()
    {
        RespuestaAlCrear = "Procesando...";
        var respuesta = await Http.PostAsJsonAsync($"{miconexion.Servidor}/api/E11_Marca/Crear", nuevamarca);
        await Actualizar();
        RespuestaAlCrear = await respuesta.Content.ReadAsStringAsync();
        nuevamarca.Descripcion_Marca_E11 = null;
        nuevamarca.Uso_Marca_E11 = null;


    }

    async Task Actualizar()
    {
        var listado = await Http.GetFromJsonAsync<List<E11_Marca>>($"{miconexion.Servidor}/api/E11_Marca/Listado");
        Listado = listado;
      

    }
    protected override async Task OnInitializedAsync()
    {
        await Actualizar();
    }
    async Task Eliminar(E11_Marca objeto)
    {


        var respuesta = await Http.DeleteAsync($"{miconexion.Servidor}/api/E11_Marca/Eliminar/{objeto.Id}");
        Console.WriteLine(respuesta);
        await Actualizar();
    }
}

