@page "/courierslist"
@inject HttpClient Http
@using LaboratorioClient.Models
<div>
      <NavMenu />
 </div>
<br />
<br />
<div class="section-title">
    <h2>Couriers</h2>
</div>
<div class="row" style="display:flex;justify-content:center">
    <div class="col-4" style="cursor:pointer" data-bs-toggle="offcanvas" data-bs-target="#offcanvasCourier" aria-controls="offcanvasScrolling">
        <img src="Couriers.png" class="img-fluid" alt="...">
    </div>
    <div class="col-4" style="display:flex;align-items:center">
        <div class="card" style="width:500px; max-height:400px ;height:auto"
                <div class="card-body. overflow-scroll">
                    <table  class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Nombre del Couriers</th>
                                <th></th>

                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var i in ListadoCouriers)
                        {
                                        <tr>
                                            <td>@i.Nombre_Courrier_E16</td>
                                            <td> <button type="button" class="btn btn-outline-secondary"@onclick="()=>Eliminar(i)">Eliminar</button> </td>
                                        </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        
    </div>
</div>

<div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasCourier" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Listado Couriers</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <p>Laboratorio activo con presencia en mas de 18 paises</p>
        <br />
        <div>
            <label>Nombre</label>
            <input @bind-value=nuevocourier.Nombre_Courrier_E16 class="form-control" placeholder="Nombre" />
            
            <button @onclick=Guardar type="button" class="btn btn-secondary">
                Guardar
            </button>
            <br />
            <label>@RespuestaAlCrear</label>

        </div>
    </div>
</div>

@code {
    E16_Courrier nuevocourier = new E16_Courrier();
    Conexion miconexion = new Conexion();
    string RespuestaAlCrear = "";
    public static List<E16_Courrier> ListadoCouriers = new List<E16_Courrier>();
    async Task Guardar()
    {
        RespuestaAlCrear = "Procesando...";
        var respuesta = await Http.PostAsJsonAsync($"{miconexion.Servidor}/api/E16_Courrier/Crear", nuevocourier);
        await Actualizar();
        RespuestaAlCrear = await respuesta.Content.ReadAsStringAsync();
        nuevocourier.Nombre_Courrier_E16 = null;
       
    }

    async Task Actualizar()
    {
        var listado = await Http.GetFromJsonAsync<List<E16_Courrier>>($"{miconexion.Servidor}/api/E16_Courrier/Listado");
        ListadoCouriers = listado;
    }
    protected override async Task OnInitializedAsync()
    {
        await Actualizar();
    }

    async Task Eliminar(E16_Courrier objeto)
    {


        var respuesta = await Http.DeleteAsync($"{miconexion.Servidor}/api/E16_Courrier/Eliminar/{objeto.Id}");
        Console.WriteLine(respuesta);
        await Actualizar();
    }
}
