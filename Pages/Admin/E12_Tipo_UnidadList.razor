@page "/tipounidad"
@inject HttpClient Http
@using LaboratorioClient.Models
<div>
      <NavMenu />
 </div>
<br />
<br />
<div class="section-title">
    <h2>Tipo Unidad</h2>
</div>


<div class="row" style="display:flex;justify-content:center">
    <div class="col-4" style="cursor:pointer" data-bs-toggle="offcanvas" data-bs-target="#offcanvasTipoUnidad" aria-controls="offcanvasScrolling">
        <img src="Tipounidadmedida.webp" class="img-fluid" alt="...">
    </div>
    <div class="col-4" style="display:flex;align-items:center">

        <div class="card" style="width:500px; max-height:400px ;height:auto"
                <div class="card-body. overflow-scroll">
                    <table  class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Descripcion Tipo Unidad</th>
                                

                                <th> </th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var i in TipoUnidadListado)
                            {
                                    <tr>
                                        <td>@i.Descripcion_Tipo_Unidad_E12</td>
                                        <td> <button type="button"  class="btn btn-outline-secondary" @onclick="()=>Eliminar(i)">Eliminar</button> </td>
                                    </tr>
                            }
                        </tbody>
                    </table>
                </div>
        </div>


    </div>
</div>

<div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasTipoUnidad" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Listado Tipo Unidad</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <p>Laboratorio activo con presencia en mas de 18 paises</p>
        <br />
        <div>
            <label>Descripcion Tipo de Unidad</label>
            <input @bind-value=tipounidad.Descripcion_Tipo_Unidad_E12 class="form-control" placeholder="Descripcion Tipo Unidad" />

            <button @onclick=Guardar type="button" class="btn btn-secondary">
                Guardar 
            </button>
            <br />
            <label>@RespuestaAlCrear</label>

        </div>
    </div>
</div>

@code {
    E12_Tipo_Unidad tipounidad = new E12_Tipo_Unidad();
    string RespuestaAlCrear = "";
    public static List<E12_Tipo_Unidad> TipoUnidadListado = new List<E12_Tipo_Unidad>();
    Conexion miconexion = new Conexion();
    async Task Guardar()
    {
        RespuestaAlCrear = "Procesando...";
        var respuesta = await Http.PostAsJsonAsync($"{miconexion.Servidor}/api/E12_Tipo_Unidad/Crear", tipounidad);
        await Actualizar();
        RespuestaAlCrear = await respuesta.Content.ReadAsStringAsync();
        tipounidad.Descripcion_Tipo_Unidad_E12 = null;

    }

    async Task Actualizar()
    {
        var listado = await Http.GetFromJsonAsync<List<E12_Tipo_Unidad>>($"{miconexion.Servidor}/api/E12_Tipo_Unidad/Listado");
        TipoUnidadListado = listado;
    }
    protected override async Task OnInitializedAsync()
    {
        await Actualizar();
    }

    async Task Eliminar(E12_Tipo_Unidad objeto)
    {


        var respuesta = await Http.DeleteAsync($"{miconexion.Servidor}/api/E12_Tipo_Unidad/Eliminar/{objeto.Id}");
        Console.WriteLine(respuesta);
        await Actualizar();
    }
}
